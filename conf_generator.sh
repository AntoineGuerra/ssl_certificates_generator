#!/usr/bin/env bash
company_name=$1
hostname=$2
year=$(date +"%Y")

nginx="
# GENERATED by ${0##*/}\n
# Created $(date +%Y-%m-%d) at $(date +%H:%M:%S)\n
# Company Name : ${company_name}\n
# Host Name : ${hostname}\n
server {\n
    \tlisten 80;\n
    \tserver_name ${hostname};\n
    \treturn 301      https://www.${hostname}\$request_uri;  // redirection des url http vers https\n
}\n
\n
server {\n
    \tlisten 443;\n
    \tssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n
    \tssl_prefer_server_ciphers   on;\n
    \tssl_ciphers \"ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA\";\n
    \t# @todo Please verify your path keys / certificates\n
    \tssl_certificate     /etc/pki/tls/certs/${company_name}/${company_name}-${year}-fullchain.crt;\n
    \tssl_certificate_key /etc/pki/tls/certs/${company_name}/${company_name}-${year}.key;\n
	\tserver_name www.${hostname};\n
    \t# @todo Please verify your Document Root\n
    \troot /var/www/html/${company_name};\n
}\n"

apache="
# GENERATED by ${0##*/}\n
# Created $(date +%Y-%m-%d) at $(date +%H:%M:%S)\n
# Company Name : ${company_name}\n
# Host Name : ${hostname}\n
<VirtualHost *:443>\n
  \t# Enable/Disable SSL for this virtual host.\n
  \tSSLEngine on\n
\n
  \t# Disable SSLv2 access by default:\n
  \tSSLProtocol all -SSLv2 -SSLv3\n
\n
  \tSSLCiphersuite \"ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA\"\n
\n
  \tSSLHonorCipherOrder on\n

  \tServerName www.${hostname}\n
  \tServerAlias ${hostname}\n
  \t# @todo Please verify your Document Root\n
  \tDocumentRoot /var/www/html/${company_name}\n
\n
  \tSSLEngine on\n
    \t# @todo Please verify your path keys / certificates\n
  \tSSLCertificateFile /etc/pki/tls/certs/${company_name}-${year}.crt\n
  \tSSLCertificateKeyFile /etc/pki/tls/certs/${company_name}-${year}.key\n
  \tSSLCertificateChainFile /etc/pki/tls/certs/${company_name}-${year}-fullchain.pem\n
</VirtualHost>\n
"
apache_htaccess="
# [...]
RewriteCond %{HTTPS} !=on\n
RewriteRule ^.*$ https://%{SERVER_NAME}%{REQUEST_URI} [R=301,L]\n
"
createSubDirectory() {
    nginxSubDir="./serverTemplates/nginx/${company_name}"
    apacheSubDir="./serverTemplates/apache/${company_name}"
    if [[ !(-d $nginxSubDir) ]]
    then
        mkdir $nginxSubDir
    fi
    if [[ !(-d $apacheSubDir) ]]
    then
        mkdir $apacheSubDir
    fi

}
createSubDirectory
echo -e $nginx > ./serverTemplates/nginx/${company_name}/${company_name}.conf.template
echo -e $apache > ./serverTemplates/apache/${company_name}/${company_name}.conf.template
echo -e $apache_htaccess > ./serverTemplates/apache/${company_name}/${company_name}.htaccess.template
echo -e "After all modification done, check your configuration with https://www.sslshopper.com/ssl-checker.html#hostname=www.${hostname}"
