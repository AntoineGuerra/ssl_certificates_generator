#!/usr/bin/env bash
color_default='\033[0m'
color_warning='\033[0;33m'
color_info='\033[0;36m'
color_success='\033[0;32m'
color_error='\033[0;31m'


company_name=$1
hostname=$2
path_to_certs=$3
path_to_document_root=$4
year=$(date +"%Y")

if [[ $hostname =~ ^w{3}\.{1}(.*) ]]
then
    webHost=$hostname
    hostname=${BASH_REMATCH[1]}
else
    webHost="www.${hostname}"
fi

addSlash() {
    if [[ ${path_to_certs} =~ (.*[^\/])\/+$ ]]
    then
        path_to_certs=${BASH_REMATCH[1]}
    fi
    path_to_certs="${path_to_certs}/"
    if [[ ${path_to_document_root} =~ (.*[^\/])\/+$ ]]
    then
        path_to_document_root=${BASH_REMATCH[1]}
    fi
    path_to_document_root="${path_to_document_root}/"

}

addSlash

nginx="
# GENERATED by ${0##*/}\n
# Created $(date +%Y-%m-%d) at $(date +%H:%M:%S)\n
# Company Name : ${company_name}\n
# Host Name : ${hostname}\n
server {\n
    \tlisten 80;\n
    \tserver_name ${webHost};\n
    \treturn 301      https://${webHost}\$request_uri;  // redirection des url http vers https\n
}\n
\n
server {\n
    \tlisten 443;\n
    \tssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n
    \tssl_prefer_server_ciphers   on;\n
    \tssl_ciphers \"ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA\";\n
    \t# @todo Please verify your path keys / certificates\n
    \tssl_certificate     ${path_to_certs}${company_name}-${year}-fullchain.crt;\n
    \tssl_certificate_key ${path_to_certs}${company_name}-${year}.key;\n
	\tserver_name ${webHost};\n
    \t# @todo Please verify your Document Root\n
    \troot ${path_to_document_root};\n
}\n"

apache="
# GENERATED by ${0##*/}\n
# Created $(date +%Y-%m-%d) at $(date +%H:%M:%S)\n
# Company Name : ${company_name}\n
# Host Name : ${hostname}\n
# Probably You have to uncomment this :\n
#LoadModule ssl_module modules/mod_ssl.so\n
<VirtualHost *:443>\n
  \t# Enable/Disable SSL for this virtual host.\n
  \tSSLEngine on\n
\n
  \t# Disable SSLv2 access by default:\n
  \tSSLProtocol all -SSLv2 -SSLv3\n
\n
  \tSSLCiphersuite \"ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA\"\n
\n
  \tSSLHonorCipherOrder on\n

  \tServerName ${webHost}\n
  \tServerAlias ${hostname}\n
  \t# @todo Please verify your Document Root\n
  \tDocumentRoot ${path_to_document_root}\n
\n
  \tSSLEngine on\n
    \t# @todo Please verify your path keys / certificates\n
  \tSSLCertificateFile ${path_to_certs}${company_name}-${year}.crt\n
  \tSSLCertificateKeyFile ${path_to_certs}${company_name}-${year}.key\n
  \tSSLCertificateChainFile ${path_to_certs}${company_name}-${year}-fullchain.pem\n
</VirtualHost>\n
"
apache_htaccess="
# [...]
RewriteCond %{HTTPS} !=on\n
RewriteRule ^.*$ https://%{SERVER_NAME}%{REQUEST_URI} [R=301,L]\n
"




createSubDirectory() {
    nginxSubDir="./serverTemplates/nginx/${company_name}"
    apacheSubDir="./serverTemplates/apache/${company_name}"
    if [[ !(-d $nginxSubDir) ]]
    then
        mkdir $nginxSubDir
    fi
    if [[ !(-d $apacheSubDir) ]]
    then
        mkdir $apacheSubDir
    fi

}

# $1 = file
createdFile_message() {
    file=$1
    if [[ -f $file ]]
    then
        echo -e "${color_success}File created with success ${color_info}${file}"
    else
        echo -e "${color_error}ERROR !${color_default}Cannot create file ${color_info}${file}"
    fi

}

createSubDirectory
echo -e $nginx > ./serverTemplates/nginx/${company_name}/${company_name}.conf.template
createdFile_message ./serverTemplates/nginx/${company_name}/${company_name}.conf.template
echo -e $apache > ./serverTemplates/apache/${company_name}/${company_name}.conf.template
createdFile_message ./serverTemplates/apache/${company_name}/${company_name}.conf.template
echo -e $apache_htaccess > ./serverTemplates/apache/${company_name}/${company_name}.htaccess.template
createdFile_message ./serverTemplates/apache/${company_name}/${company_name}.htaccess.template
echo -e "After all modification server conf are done,\n check your configuration with https://www.sslshopper.com/ssl-checker.html#hostname=${webHost}"
